name: CI/CD Pipeline

on:
  push:
    branches:
      - main

permissions:
  id-token: write  # Allow write permission for the ID token
  contents: read   # Allow read access to repository contents

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Azure Login using OIDC token
      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Step 3: Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      # Step 4: Terraform Init
      - name: Terraform Init
        working-directory: ./scripts
        run: terraform init

      # Step 5: Terraform Apply
      - name: Terraform Apply
        working-directory: ./scripts
        run: terraform apply -auto-approve

      # Step 6: Capture the ACR name from Terraform output
      - name: Get ACR Name
        id: get_acr_name
        working-directory: ./scripts
        run: |
          # Capture the output and print for debugging
          ACR_NAME=$(terraform output -raw acr_name)
          echo "ACR_NAME=$ACR_NAME" >> $GITHUB_ENV
          echo "ACR_NAME is set to $ACR_NAME" # Debugging output
          echo "Current environment variables:"
          env  # List all environment variables for debugging

      # Step 7: Enable ACR Admin account
      - name: Enable ACR Admin
        run: |
          echo "Enabling admin for ACR: ${{ env.ACR_NAME }}"
          az acr update --name "${{ env.ACR_NAME }}" --admin-enabled true
