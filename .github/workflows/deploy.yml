name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    
      # Step 1: Checkout Code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Log in to Azure Container Registry (ACR)
      - name: Log in to Azure Container Registry (ACR)
        run: |
          echo "${{ secrets.AZURE_ACR_PASSWORD }}" | docker login ${{ secrets.AZURE_ACR_LOGIN_SERVER }} -u ${{ secrets.AZURE_ACR_USERNAME }} --password-stdin

      # Step 3: Build Docker images for the microservices
      - name: Build and tag Docker images
        run: |
          docker build -t ${{ secrets.AZURE_ACR_LOGIN_SERVER }}/book_catalog:latest ./book_catalog
          docker build -t ${{ secrets.AZURE_ACR_LOGIN_SERVER }}/inventory_management:latest ./inventory_management

      # Step 4: Push the images to Azure Container Registry (ACR)
      - name: Push Docker images to ACR
        run: |
          docker push ${{ secrets.AZURE_ACR_LOGIN_SERVER }}/book_catalog:latest
          docker push ${{ secrets.AZURE_ACR_LOGIN_SERVER }}/inventory_management:latest

      # Step 5: Set the AKS context
      - name: Set AKS context
        uses: azure/aks-set-context@v2
        with:
          resource-group: <your-resource-group-name>  # Replace with your resource group
          cluster-name: <your-cluster-name>           # Replace with your AKS cluster name

      # Step 6: Verify Kubernetes connection
      - name: Verify connection to AKS
        run: |
          kubectl cluster-info

      # Step 7: Deploy to Azure Kubernetes Service (AKS)
      - name: Deploy to AKS
        uses: tale/kubectl-action@v1
        with:
          base64-kube-config: ${{ secrets.KUBE_CONFIG }}
          kubectl-version: v1.24.2
          args: kubectl apply -f ./scripts/kubernetes/deployment.yml
